// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PK.DataAccess;

namespace PK.DataAccess.Migrations
{
    [DbContext(typeof(DataAccessContext))]
    partial class DataAccessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AbilityGeneration", b =>
                {
                    b.Property<int>("AbilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("GenerationsId")
                        .HasColumnType("int");

                    b.HasKey("AbilitiesId", "GenerationsId");

                    b.HasIndex("GenerationsId");

                    b.ToTable("AbilitiesGenerations");
                });

            modelBuilder.Entity("PK.Common.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Effect")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("PK.Common.Models.Attack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Accuracy")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Effect")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsContactAttack")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<int>("PowerPoints")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TypeId");

                    b.ToTable("Attacks");
                });

            modelBuilder.Entity("PK.Common.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("PK.Common.Models.DamageCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DamageCategories");
                });

            modelBuilder.Entity("PK.Common.Models.EggGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EggGroups");
                });

            modelBuilder.Entity("PK.Common.Models.Evolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EvolutionPokemonId")
                        .HasColumnType("int");

                    b.Property<int>("PreEvolutionPokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EvolutionPokemonId");

                    b.HasIndex("PreEvolutionPokemonId");

                    b.ToTable("Evolutions");
                });

            modelBuilder.Entity("PK.Common.Models.EvolutionByLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EvolutionId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EvolutionId");

                    b.ToTable("EvolutionsByLevel");
                });

            modelBuilder.Entity("PK.Common.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GenerationId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("PK.Common.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("PK.Common.Models.Generation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Generations");
                });

            modelBuilder.Entity("PK.Common.Models.MoveMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttackId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackId");

                    b.HasIndex("TypeId");

                    b.ToTable("MoveMachines");
                });

            modelBuilder.Entity("PK.Common.Models.MoveMachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MoveMachineTypes");
                });

            modelBuilder.Entity("PK.Common.Models.PokedexDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PokemonId");

                    b.ToTable("PokedexDescriptions");
                });

            modelBuilder.Entity("PK.Common.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("EggGroup1Id")
                        .HasColumnType("int");

                    b.Property<int>("EggGroup2Id")
                        .HasColumnType("int");

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NationalIndex")
                        .HasColumnType("int");

                    b.Property<int>("PrimaryTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SecondaryTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialAttack")
                        .HasColumnType("int");

                    b.Property<int>("SpecialDefense")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<double>("Wight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("EggGroup1Id");

                    b.HasIndex("EggGroup2Id");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PrimaryTypeId");

                    b.HasIndex("SecondaryTypeId");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbilityId")
                        .HasColumnType("int");

                    b.Property<int?>("AbilityId1")
                        .HasColumnType("int");

                    b.Property<bool>("IsHiddenAbility")
                        .HasColumnType("bit");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("PokemonId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("AbilityId1");

                    b.HasIndex("PokemonId");

                    b.HasIndex("PokemonId1");

                    b.ToTable("PokemonAbilities");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttackId")
                        .HasColumnType("int");

                    b.Property<int?>("AttackId1")
                        .HasColumnType("int");

                    b.Property<int>("GenerationId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackId");

                    b.HasIndex("AttackId1");

                    b.HasIndex("GenerationId");

                    b.HasIndex("PokemonId");

                    b.HasIndex("TypeId");

                    b.ToTable("PokemonAttacks");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttackByLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LevelObtained")
                        .HasColumnType("int");

                    b.Property<int>("PokemonAttackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PokemonAttackId");

                    b.ToTable("PokemonAttacksByLevel");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttackByMoveMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MoveMachineId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonAttackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MoveMachineId");

                    b.HasIndex("PokemonAttackId");

                    b.ToTable("PokemonAttacksByMoveMachine");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttackByTutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonAttackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PokemonAttackId");

                    b.ToTable("PokemonAttacksByTutor");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttackType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PokemonAttacksTypes");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonGender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId1")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("PokemonId1")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.HasIndex("GenderId1");

                    b.HasIndex("PokemonId");

                    b.HasIndex("PokemonId1");

                    b.ToTable("PokemonGenders");
                });

            modelBuilder.Entity("PK.Common.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Types");
                });

            modelBuilder.Entity("AbilityGeneration", b =>
                {
                    b.HasOne("PK.Common.Models.Ability", null)
                        .WithMany()
                        .HasForeignKey("AbilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Generation", null)
                        .WithMany()
                        .HasForeignKey("GenerationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PK.Common.Models.Attack", b =>
                {
                    b.HasOne("PK.Common.Models.DamageCategory", "Category")
                        .WithMany("Attacks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Type", "Type")
                        .WithMany("Attacks")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PK.Common.Models.Evolution", b =>
                {
                    b.HasOne("PK.Common.Models.Pokemon", "EvolutionPokemon")
                        .WithMany()
                        .HasForeignKey("EvolutionPokemonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Pokemon", "PreEvolutionPokemon")
                        .WithMany()
                        .HasForeignKey("PreEvolutionPokemonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EvolutionPokemon");

                    b.Navigation("PreEvolutionPokemon");
                });

            modelBuilder.Entity("PK.Common.Models.EvolutionByLevel", b =>
                {
                    b.HasOne("PK.Common.Models.Evolution", "Evolution")
                        .WithMany()
                        .HasForeignKey("EvolutionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Evolution");
                });

            modelBuilder.Entity("PK.Common.Models.Game", b =>
                {
                    b.HasOne("PK.Common.Models.Generation", "Generation")
                        .WithMany("Games")
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Generation");
                });

            modelBuilder.Entity("PK.Common.Models.MoveMachine", b =>
                {
                    b.HasOne("PK.Common.Models.Attack", "Attack")
                        .WithMany()
                        .HasForeignKey("AttackId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.MoveMachineType", "Type")
                        .WithMany("MoveMachines")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attack");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PK.Common.Models.PokedexDescription", b =>
                {
                    b.HasOne("PK.Common.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PK.Common.Models.Pokemon", b =>
                {
                    b.HasOne("PK.Common.Models.Color", "Color")
                        .WithMany("PokemonWithColor")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.EggGroup", "EggGroup1")
                        .WithMany("PokemonWithEggGroup1")
                        .HasForeignKey("EggGroup1Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.EggGroup", "EggGroup2")
                        .WithMany("PokemonWithEggGroup2")
                        .HasForeignKey("EggGroup2Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Generation", "Generation")
                        .WithMany("Pokemon")
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Type", "PrimaryType")
                        .WithMany("PokemonWithPrimaryType")
                        .HasForeignKey("PrimaryTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Type", "SecondaryType")
                        .WithMany("PokemonWithSecondaryType")
                        .HasForeignKey("SecondaryTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("EggGroup1");

                    b.Navigation("EggGroup2");

                    b.Navigation("Generation");

                    b.Navigation("PrimaryType");

                    b.Navigation("SecondaryType");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAbility", b =>
                {
                    b.HasOne("PK.Common.Models.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Ability", null)
                        .WithMany("Pokemon")
                        .HasForeignKey("AbilityId1");

                    b.HasOne("PK.Common.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Pokemon", null)
                        .WithMany("Abilities")
                        .HasForeignKey("PokemonId1");

                    b.Navigation("Ability");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttack", b =>
                {
                    b.HasOne("PK.Common.Models.Attack", "Attack")
                        .WithMany()
                        .HasForeignKey("AttackId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Attack", null)
                        .WithMany("Pokemon")
                        .HasForeignKey("AttackId1");

                    b.HasOne("PK.Common.Models.Generation", "Generation")
                        .WithMany()
                        .HasForeignKey("GenerationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Pokemon", "Pokemon")
                        .WithMany("Attacks")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.PokemonAttackType", "Type")
                        .WithMany("PokemonAttacks")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attack");

                    b.Navigation("Generation");

                    b.Navigation("Pokemon");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttackByLevel", b =>
                {
                    b.HasOne("PK.Common.Models.PokemonAttack", "PokemonAttack")
                        .WithMany()
                        .HasForeignKey("PokemonAttackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokemonAttack");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttackByMoveMachine", b =>
                {
                    b.HasOne("PK.Common.Models.MoveMachine", "MoveMachine")
                        .WithMany()
                        .HasForeignKey("MoveMachineId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.PokemonAttack", "PokemonAttack")
                        .WithMany()
                        .HasForeignKey("PokemonAttackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MoveMachine");

                    b.Navigation("PokemonAttack");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttackByTutor", b =>
                {
                    b.HasOne("PK.Common.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.PokemonAttack", "PokemonAttack")
                        .WithMany()
                        .HasForeignKey("PokemonAttackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("PokemonAttack");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonGender", b =>
                {
                    b.HasOne("PK.Common.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Gender", null)
                        .WithMany("Pokemon")
                        .HasForeignKey("GenderId1");

                    b.HasOne("PK.Common.Models.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PK.Common.Models.Pokemon", null)
                        .WithMany("Genders")
                        .HasForeignKey("PokemonId1");

                    b.Navigation("Gender");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PK.Common.Models.Ability", b =>
                {
                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PK.Common.Models.Attack", b =>
                {
                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PK.Common.Models.Color", b =>
                {
                    b.Navigation("PokemonWithColor");
                });

            modelBuilder.Entity("PK.Common.Models.DamageCategory", b =>
                {
                    b.Navigation("Attacks");
                });

            modelBuilder.Entity("PK.Common.Models.EggGroup", b =>
                {
                    b.Navigation("PokemonWithEggGroup1");

                    b.Navigation("PokemonWithEggGroup2");
                });

            modelBuilder.Entity("PK.Common.Models.Gender", b =>
                {
                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PK.Common.Models.Generation", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PK.Common.Models.MoveMachineType", b =>
                {
                    b.Navigation("MoveMachines");
                });

            modelBuilder.Entity("PK.Common.Models.Pokemon", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Attacks");

                    b.Navigation("Genders");
                });

            modelBuilder.Entity("PK.Common.Models.PokemonAttackType", b =>
                {
                    b.Navigation("PokemonAttacks");
                });

            modelBuilder.Entity("PK.Common.Models.Type", b =>
                {
                    b.Navigation("Attacks");

                    b.Navigation("PokemonWithPrimaryType");

                    b.Navigation("PokemonWithSecondaryType");
                });
#pragma warning restore 612, 618
        }
    }
}
